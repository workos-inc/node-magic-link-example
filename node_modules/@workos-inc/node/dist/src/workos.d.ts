import { AxiosResponse } from 'axios';
import { AuditTrail } from './audit-trail/audit-trail';
import { DirectorySync } from './directory-sync/directory-sync';
import { Passwordless } from './passwordless/passwordless';
import { Portal } from './portal/portal';
import { SSO } from './sso/sso';
import { WorkOSOptions, PostOptions } from './common/interfaces';
export declare class WorkOS {
    readonly key?: string | undefined;
    readonly options: WorkOSOptions;
    readonly baseURL: string;
    private readonly client;
    readonly auditTrail: AuditTrail;
    readonly directorySync: DirectorySync;
    readonly passwordless: Passwordless;
    readonly portal: Portal;
    readonly sso: SSO;
    constructor(key?: string | undefined, options?: WorkOSOptions);
    post(path: string, entity: any, options?: PostOptions): Promise<AxiosResponse>;
    get(path: string, query?: any): Promise<AxiosResponse>;
    emitWarning(warning: string): void;
}
